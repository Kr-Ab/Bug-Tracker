{"version":3,"sources":["Components/Navbar.js","Components/Sidebar.js","images/logo.png","Components/ProjectDetail/CardAssignedPersonnel.js","Components/ProjectDetail/CardTicketsForThisProject.js","pages/ProjectDetail.js"],"names":["isLoading","useContext","Context","removeAuth","user","document","getElementById","addEventListener","error","console","log","style","zIndex","className","name","type","data-toggle","aria-controls","aria-expanded","aria-label","onClick","id","typeUser","useState","window","sessionStorage","getItem","selectedButton","setSelectedButton","handleActive","val","setItem","data-color","src","require","width","alt","to","module","exports","CardAssignedPersonnel","props","personelForThisProject","setPersonelForThisProject","useEffect","axios","post","backend_route","projectId","params","headers","then","res","data","catch","filteredArray","setFilteredArray","searchedWord","setSearchedWord","searchedItem","filter","obj","objectClean","key","JSON","stringify","toLowerCase","includes","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentAssignedPersonnel","slice","pageNumbers","i","Math","ceil","length","push","value","onChange","e","target","placeholder","class","map","personel","index","email","role","number","CardTicketsForThisProject","listTicketsForThisProject","currentTicketsForThisProject","ticket","submitter","assignedDeveloper","devName","status","createdAt","projectDetail","setProjectDetail","setListTicketsForThisProject","tickets","navigate","description"],"mappings":"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","file":"static/js/6.cff40db2.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Context } from \"./../Context\";\r\nimport \"./styles.css\";\r\nimport { Fade } from '../animations/fade'\r\n\r\nexport default ({ isLoading }) => {\r\n  const { removeAuth, user } = useContext(Context);\r\n  try {\r\n    var btnRemoveAuth = document.getElementById(\"removeAuth\");\r\n    btnRemoveAuth.addEventListener(\"click\", () => {\r\n      removeAuth();\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  return (\r\n    <Fade>\r\n      <nav\r\n        style={{ zIndex: 10 }}\r\n        className=\"navbar navbar-expand-lg bg-light navbar-absolute fixed-top navbartracker mb-2 \"\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"d-flex justify-content-center align-items-center\">\r\n              <h5 className=\"text-secondary m-0\">\r\n                {(\"Logged in as\")} :\r\n                <span className=\"text-dark text-capitalize font-weight-normal\">\r\n                  {user.name}\r\n                </span>\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"navbar-form\"></div>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            aria-controls=\"navigation-index\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"sr-only\">Toggle navigation</span>\r\n            <span className=\"navbar-toggler-icon icon-bar\"></span>\r\n            <span className=\"navbar-toggler-icon icon-bar\"></span>\r\n            <span className=\"navbar-toggler-icon icon-bar\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse justify-content-end\">\r\n            <ul className=\"navbar-nav\">\r\n\r\n              <button\r\n                type=\"submit\"\r\n                onClick={removeAuth}\r\n                className=\" btn btn-danger w-100\"\r\n                id=\"removeAuth\"\r\n              >\r\n                {(\"Log out\")}\r\n              </button>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </Fade>\r\n  );\r\n};\r\n","import React, { useContext, Fragment, useState } from \"react\";\r\nimport { Context } from \"./../Context\";\r\nimport { Link } from \"@reach/router\";\r\nimport styled from \"styled-components\";\r\nimport \"./styles.css\";\r\n\r\nexport default () => {\r\n  const { user, typeUser } = useContext(Context);\r\n\r\n  const [selectedButton, setSelectedButton] = useState(\r\n    window.sessionStorage.getItem(\"active\") || \"dashboard\"\r\n  );\r\n\r\n  const handleActive = val => {\r\n    if (val == \"dashboard\") {\r\n      window.sessionStorage.setItem(\"active\", \"dashboard\");\r\n      setSelectedButton(\"dashboard\");\r\n    } else if (val == \"manageRole\") {\r\n      window.sessionStorage.setItem(\"active\", \"manageRole\");\r\n      setSelectedButton(\"manageRole\");\r\n    } else if (val == \"manageProject\") {\r\n      window.sessionStorage.setItem(\"active\", \"manageProject\");\r\n      setSelectedButton(\"manageProject\");\r\n    } else if (val == \"myProjects\") {\r\n      window.sessionStorage.setItem(\"active\", \"myProjects\");\r\n      setSelectedButton(\"myProjects\");\r\n    } else if (val == \"myTickets\") {\r\n      window.sessionStorage.setItem(\"active\", \"myTickets\");\r\n      setSelectedButton(\"myTickets\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"sidebar\" data-color=\"danger\">\r\n      <div className=\"d-flex flex-row logo\">\r\n        <div className=\"d-flex flex-row\">\r\n          <div>\r\n            <img src={require(\"./../images/logo.png\")} width={\"80px\"} alt=\"\" />\r\n          </div>\r\n          <div className=\"overflow-hidden w-75\">\r\n            <h3>{(\"Welcome\")}</h3>\r\n            <h4 className=\"font-weight-normal text-capitalize overflow-hidden\">\r\n              {user.name}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar-wrapper\">\r\n        <ul className=\"nav navbar-nav\">\r\n          <li className={selectedButton == \"dashboard\" ? \"active\" : \"nav-item\"}>\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/\"\r\n              onClick={() => {\r\n                handleActive(\"dashboard\");\r\n              }}\r\n            >\r\n              <i className=\"material-icons\">dashboard</i>\r\n              <p>{(\"Dashboard\")}</p>\r\n            </Link>\r\n          </li>\r\n          {typeUser === \"admin\" && (\r\n            <Fragment>\r\n              <li\r\n                className={\r\n                  selectedButton == \"manageRole\" ? \"active\" : \"nav-item\"\r\n                }\r\n              >\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/manageRole\"\r\n                  onClick={() => {\r\n                    handleActive(\"manageRole\");\r\n                  }}\r\n                >\r\n                  <i className=\"material-icons\">group_add</i>\r\n\r\n                  <p>{(\"Manage Role Assignment\")}</p>\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={\r\n                  selectedButton == \"manageProject\"\r\n                    ? \"nav-item active\"\r\n                    : \"nav-item\"\r\n                }\r\n              >\r\n                <Link\r\n                  onClick={() => {\r\n                    handleActive(\"manageProject\");\r\n                  }}\r\n                  className=\"nav-link\"\r\n                  to=\"/manageProject\"\r\n                >\r\n                  <i className=\"material-icons\">\"people_alt\"</i>\r\n                  <p>{(\"Manage Projects Users\")}</p>\r\n                </Link>\r\n              </li>\r\n            </Fragment>\r\n          )}\r\n\r\n          <li\r\n            className={\r\n              selectedButton == \"myProjects\" ? \"nav-item active\" : \"nav-item\"\r\n            }\r\n          >\r\n            <Link\r\n              onClick={() => {\r\n                handleActive(\"myProjects\");\r\n              }}\r\n              className=\"nav-link\"\r\n              to=\"/myProjects\"\r\n            >\r\n              <i className=\"material-icons\">library_books</i>\r\n\r\n              <p>{(\"My projects\")}</p>\r\n            </Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              selectedButton == \"myTickets\" ? \"nav-item active\" : \"nav-item\"\r\n            }\r\n          >\r\n            <Link\r\n              onClick={() => {\r\n                handleActive(\"myTickets\");\r\n              }}\r\n              className=\"nav-link\"\r\n              to=\"/myTickets\"\r\n            >\r\n              <i className=\"material-icons\">loyalty</i>\r\n              <p>{(\"My tickets\")} </p>\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};","module.exports = __webpack_public_path__ + \"static/media/logo.c368e003.png\";","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { backend_route } from \"../../GlobalVariables\";\r\nimport axios from \"axios\";\r\nimport { Fade } from '../../animations/fade'\r\n\r\nexport default function CardAssignedPersonnel({ props }) {\r\n  //////////////////////////Get Assigned Personel for this project/////////////////\r\n\r\n  const [personelForThisProject, setPersonelForThisProject] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        `${backend_route}/api/admin/project/getAssignedPersonelToThisProject`,\r\n        { projectId: props.projectId },\r\n        {\r\n          params: {},\r\n          headers: { \"auth-token\": window.sessionStorage.getItem(\"token\") }\r\n        }\r\n      )\r\n      .then(function(res) {\r\n        setPersonelForThisProject(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  //////////////////////////Get Assigned Personel for this project/////////////////\r\n\r\n  ////////////////////////Card-General////////////////////////\r\n  const [filteredArray, setFilteredArray] = useState([]);\r\n  ////////////////////////Card-General////////////////////////\r\n\r\n  ////////////////////////Search////////////////////////\r\n\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  useEffect(() => {\r\n    setFilteredArray(personelForThisProject);\r\n  }, [personelForThisProject]);\r\n\r\n  const itemsFiltered = (searchedItem, arrayOfObject) => {\r\n    let arrayFiltered = arrayOfObject.filter(function(obj) {\r\n      let objectClean = {};\r\n      objectClean[\"name\"] = obj[\"name\"];\r\n      objectClean[\"email\"] = obj[\"email\"];\r\n      if (obj[\"role\"]) {\r\n        objectClean[\"role\"] = obj[\"role\"];\r\n      } else {\r\n        objectClean[\"role\"] = \"\";\r\n      }\r\n      for (let key in objectClean) {\r\n        if (\r\n          JSON.stringify(objectClean[key])\r\n            .toLowerCase()\r\n            .includes(searchedItem.toLowerCase())\r\n        ) {\r\n          return objectClean;\r\n        }\r\n      }\r\n    });\r\n    return arrayFiltered;\r\n  };\r\n\r\n  const handleSearchedWord = e => {\r\n    setSearchedWord(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredArray(itemsFiltered(searchedWord, personelForThisProject));\r\n    console.log(searchedWord);\r\n  }, [searchedWord]);\r\n  ////////////////////////Search////////////////////////\r\n\r\n  // LOGIG PAGINATION ///////////////////////////////////\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentAssignedPersonnel = filteredArray.slice(\r\n    indexOfFirstPost,\r\n    indexOfLastPost\r\n  );\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n  // const totalPersonel = myPersonel.length;\r\n\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(filteredArray.length / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  //////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <Fade className=\"card\">\r\n      <div className=\"card-header card-header-success\">\r\n        <h4 className=\"card-title \">{(\"Assigned Personel\")} </h4>\r\n        <p className=\"card-category\">\r\n          {(\"All your personnel for this project\")}{\" \"}\r\n        </p>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"table-responsive\">\r\n          {/* ///////////////////Search/////////////////////////// */}\r\n          <div className=\"input-group no-border w-100  d-flex flex-row-reverse\">\r\n            <div className=\"input-group no-border w-50  \">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={searchedWord}\r\n                onChange={handleSearchedWord}\r\n                placeholder=\"Search\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn btn-white btn-round btn-just-icon\"\r\n              >\r\n                <i class=\"material-icons\">search</i>\r\n                <div class=\"ripple-container\"></div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* ///////////////////Search/////////////////////////// */}\r\n          <table className=\"table \">\r\n            <thead className=\"\">\r\n              <tr>\r\n                <th className=\"font-weight-bold\">{(\"Username\")}</th>\r\n                <th className=\"font-weight-bold\">{(\"Email\")}</th>\r\n                <th className=\"font-weight-bold\">{(\"Role\")} </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentAssignedPersonnel.map((personel, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{personel.name}</td>\r\n                    <td> {personel.email}</td>\r\n                    <td> {personel.role}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td>\r\n                  <nav>\r\n                    <ul className=\"pagination\">\r\n                      {pageNumbers.map(number => (\r\n                        <li key={number} className=\"page-item\">\r\n                          <a\r\n                            onClick={() => paginate(number)}\r\n                            className=\"page-link\"\r\n                          >\r\n                            {number}\r\n                          </a>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </nav>\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Fade } from '../../animations/fade'\r\n\r\nexport default function CardTicketsForThisProject({\r\n  listTicketsForThisProject\r\n}) {\r\n\r\n  ////////////////////////Card-General////////////////////////\r\n  const [filteredArray, setFilteredArray] = useState([]);\r\n  ////////////////////////Card-General////////////////////////\r\n\r\n  ////////////////////////Search////////////////////////\r\n\r\n  const [searchedWord, setSearchedWord] = useState(\"\");\r\n  useEffect(() => {\r\n    setFilteredArray(listTicketsForThisProject);\r\n  }, [listTicketsForThisProject]);\r\n\r\n  const itemsFiltered = (searchedItem, arrayOfObject) => {\r\n    let arrayFiltered = arrayOfObject.filter(function(obj) {\r\n      let objectClean = {};\r\n      objectClean[\"name\"] = obj[\"name\"];\r\n      if (obj[\"assignedDeveloper\"]) {\r\n        objectClean[\"assignedDeveloper\"] = obj[\"assignedDeveloper\"][\"devName\"];\r\n      } else {\r\n        objectClean[\"assignedDeveloper\"] = \"\";\r\n      }\r\n      if (obj[\"submiter\"]) {\r\n        objectClean[\"submiter\"] = obj[\"submiter\"][\"name\"];\r\n      } else {\r\n        objectClean[\"submiter\"] = \"\";\r\n      }\r\n      objectClean[\"status\"] = obj[\"status\"];\r\n      objectClean[\"createdAt\"] = obj[\"createdAt\"];\r\n\r\n      for (let key in objectClean) {\r\n        if (\r\n          JSON.stringify(objectClean[key])\r\n            .toLowerCase()\r\n            .includes(searchedItem.toLowerCase())\r\n        ) {\r\n          return objectClean;\r\n        }\r\n      }\r\n    });\r\n    return arrayFiltered;\r\n  };\r\n\r\n  const handleSearchedWord = e => {\r\n    setSearchedWord(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredArray(itemsFiltered(searchedWord, listTicketsForThisProject));\r\n    console.log(searchedWord);\r\n  }, [searchedWord]);\r\n  ////////////////////////Search////////////////////////\r\n\r\n  // LOGIG PAGINATION ///////////////////////////////////\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(5);\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentTicketsForThisProject = filteredArray.slice(\r\n    indexOfFirstPost,\r\n    indexOfLastPost\r\n  );\r\n\r\n  // Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(filteredArray.length / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  //////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <Fade className=\"card\">\r\n      <div className=\"card-header card-header-success\">\r\n        <h4 className=\"card-title \"> {(\"Tickets for This project\")} </h4>\r\n        <p className=\"card-category\">\r\n          {(\"All your tickets for this project\")}\r\n        </p>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"table-responsive\">\r\n          {/* ///////////////////Search/////////////////////////// */}\r\n          <div className=\"input-group no-border w-100  d-flex flex-row-reverse\">\r\n            <div className=\"input-group no-border w-50  \">\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                value={searchedWord}\r\n                onChange={handleSearchedWord}\r\n                placeholder=\"Search\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                class=\"btn btn-white btn-round btn-just-icon\"\r\n              >\r\n                <i class=\"material-icons\">search</i>\r\n                <div class=\"ripple-container\"></div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* ///////////////////Search/////////////////////////// */}\r\n          <table className=\"table \">\r\n            <thead className=\"\">\r\n              <tr>\r\n                <th className=\"font-weight-bold\">{(\"Title\")}</th>\r\n                <th className=\"font-weight-bold\">{(\"Developer\")}</th>\r\n                <th className=\"font-weight-bold\">{(\"Submitter\")}</th>\r\n                <th className=\"font-weight-bold\">{(\"Status\")}</th>\r\n                <th className=\"font-weight-bold\">{(\"Created at\")}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentTicketsForThisProject.map((ticket, index) => {\r\n                return (\r\n                  <tr key={index}>\r\n                    <td>{ticket.name}</td>\r\n                    <td> {ticket.submitter.name}</td>\r\n                    <td>\r\n                      {ticket.assignedDeveloper &&\r\n                        ticket.assignedDeveloper.devName}\r\n                    </td>\r\n                    <td> {ticket.status}</td>\r\n\r\n                    <td> {ticket.createdAt}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td>\r\n                  <nav>\r\n                    <ul className=\"pagination\">\r\n                      {pageNumbers.map(number => (\r\n                        <li key={number} className=\"page-item\">\r\n                          <a\r\n                            onClick={() => paginate(number)}\r\n                            className=\"page-link\"\r\n                          >\r\n                            {number}\r\n                          </a>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </nav>\r\n                </td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </Fade>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"./../Components/Navbar\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nimport { backend_route } from \"./../GlobalVariables\";\r\nimport CardAssignedPersonnel from \"../Components/ProjectDetail/CardAssignedPersonnel\";\r\nimport CardTicketsForThisProject from \"../Components/ProjectDetail/CardTicketsForThisProject\";\r\n\r\nexport default props => {\r\n\r\n  const [projectDetail, setProjectDetail] = useState({});\r\n\r\n  const [listTicketsForThisProject, setListTicketsForThisProject] = useState(\r\n    []\r\n  );\r\n\r\n  const onNavigateToProjects = () => {\r\n    navigate(\"/myProjects\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\r\n        `${backend_route}/api/global/project/getProjectById`,\r\n        { projectId: props.projectId },\r\n        {\r\n          params: {},\r\n          headers: { \"auth-token\": window.sessionStorage.getItem(\"token\") }\r\n        }\r\n      )\r\n      .then(function(res) {\r\n        console.log(res.data);\r\n        setProjectDetail(res.data);\r\n        console.log(res.data.tickets);\r\n        setListTicketsForThisProject(res.data.tickets);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"mt-3\">\r\n      <div className=\"content\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header card-header-success\">\r\n                  <h4 className=\"card-title \">\r\n                    {(\"Details for this project\")}{\" \"}\r\n                  </h4>\r\n\r\n                  <button\r\n                    onClick={onNavigateToProjects}\r\n                    class=\" btn btn-link  btn-sm  text-white\"\r\n                  >\r\n                    <i class=\"material-icons\">arrow_back</i>\r\n\r\n                    {(\"Back to list\")}\r\n                  </button>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"table-responsive\">\r\n                    <table className=\"table table-sm\">\r\n                      <tbody id=\"tbody\">\r\n                        <tr>\r\n                          <td>\r\n                            <h4>{(\"Project Name\")}</h4>\r\n                            <p>{projectDetail.name}</p>\r\n                          </td>\r\n                          <td>\r\n                            <h4>{(\"Project Description\")} </h4>\r\n                            <p>{projectDetail.description}</p>\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <CardAssignedPersonnel props={props}></CardAssignedPersonnel>\r\n            </div>\r\n            <div className=\"col-md-7\">\r\n              <CardTicketsForThisProject\r\n                listTicketsForThisProject={listTicketsForThisProject}\r\n              ></CardTicketsForThisProject>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default ProjectDetail;\r\n"],"sourceRoot":""}